---
import Layout from '../layouts/Layout.astro';
// import Card from '../components/Card.astro';
import ProjectCard  from '../components/ProjectCard';

import { useSanityClient,createImageBuilder } from 'astro-sanity';

import TypeWriteEffect from "../components/TypeWriteEffect";

export const imageBuilder = createImageBuilder(useSanityClient());

export function urlForImage(source: any) {
  return imageBuilder.image(source);
}

export async function getProjects() {
  const query = `*[_type == "project"]`;
  const project = await useSanityClient().fetch(query);
  console.log(project)
  return project;
}

const project1 = await getProjects();

// console.log(project1)
---

<Layout title="Welcome to Astro.">
	<div>
		<div class="overflow-y-scroll scroll-smooth snap-y max-h-[100vh]">
			<div id="top" class="scroll-py-10 snap-center ">
				
			<div class="h-[100vh] bg-gray-200 flex justify-center items-center">
				
				<div >
				<h1 class="text-5xl">Jack Sweeny:</h1>
				<TypeWriteEffect client:load />
				</div>
</div>
			</div>
			<!-- <div id="skills" class="scroll-py-10  scroll-smooth  snap-center h-screen ">
				<Skills />
			</div> -->
			<div id="projects" class="w-full scroll-py-10  scroll-smooth  min-h-screen snap-start bg-purple-200 flex flex-col  justify-center items-center">
				{
				project1.map((project: any) => {
					return (
						<ProjectCard name={project.projectName} imageLink={urlForImage(project.projectThumbnail).url()} projectLink={project.projectLink} projectGithubLink={project.projectGithubRepo} tags={project.tags} />
					)
				})
			}
			</div>
			<!-- <div id="contact" class="scroll-py-10  scroll-smooth  snap-center h-screen flex flex-col bg-indigo-400  justify-center items-center">
				<Contact />
			</div> 
			 <Footer /> -->
		</div>
		<p>
			
		</p>

	</div>
</Layout>

<style>

	.card{
		margin: 30px auto;
		height: 300px;
		background-color: rgba(65, 134, 117, 0.671);
		width: 300px;
	}
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
