---
import Layout from '../layouts/Layout.astro';
// import Card from '../components/Card.astro';
import CardComp  from '../components/CardComp';

import { useSanityClient } from 'astro-sanity';

export async function getProjects() {
  const query = `*[_type == "project"]`;
  const project = await useSanityClient().fetch(query);
  console.log(project)
  return project;
}

const project1 = await getProjects();

// console.log(project1)
---

<Layout title="Welcome to Astro.">
	<div>
		
		<!-- <p>{
			project1.map((project: any) => {
				return (
					<div class="card">
						<p>Name: {project.projectName}</p>
						
					</div>
				)
			})
			} -->


		<!-- </p> -->
		<p>
			{
				project1.map((project: any) => {
					return (
						<CardComp name={project.projectName} />
					)
				})
			}
		</p>
			<!-- <p>test</p> -->
	</div>
</Layout>

<style>

	.card{
		margin: 30px auto;
		height: 300px;
		background-color: rgba(65, 134, 117, 0.671);
		width: 300px;
	}
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
