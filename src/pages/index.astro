---
import Layout from '../layouts/Layout.astro';
// import Card from '../components/Card.astro';

import { useSanityClient,createImageBuilder } from 'astro-sanity';

// Section Components 
import ProjectCard  from '../components/ProjectCard';
import TypeWriteEffect from "../components/TypeWriteEffect";
import ContactForm from '../components/ContactForm';
import Navbar from '../components/Navbar.astro';
import Skill from '../components/Skill';

export const imageBuilder = createImageBuilder(useSanityClient());

export function urlForImage(source: any) {
  return imageBuilder.image(source);
}

export async function getProjects() {
  const query = `*[_type == "project"]`;
  const project = await useSanityClient().fetch(query);
  return project;
}

export async function getSkills() {
	const query = `*[_type == "skill"]`;
  const skill = await useSanityClient().fetch(query);
  return skill;
}

const project1 = await getProjects();
const skills = await getSkills();

---

<Layout title="Welcome to Astro.">
	<Navbar />
	
	<div class="overflow-y-scroll scroll-smooth snap-y max-h-[100vh]">
		<div id="top" class="scroll-py-10 snap-center relative">
			<div class=" w-full	 h-[400px] absolute z-10 top-[30%] skew-y-[170deg] opacity-50 bg-indigo-400 "></div>	
			<div class="h-[100vh] bg-gray-200 flex flex-col justify-center items-center overflow-x-hidden">	
					<h1 class="text-3xl tracking-wide sm:text-5xl text-gray-700 z-40">Jack Sweeny:</h1>
					<TypeWriteEffect client:load />
			</div>
		</div>
		<div id="skills" class=" relative scroll-py-10  scroll-smooth flex items-center justify-center flex-col snap-center h-screen bg-cyan-100">
			<div class=" w-full	 h-[450px] absolute z-0 top-[32%] skew-y-[15deg] opacity-40 bg-gray-400 "></div>	

			<h2 class="text-4xl font-bold text-gray-700 mb-6 2xl:pt-0 z-30">Skills</h2>
			<div class=" grid grid-cols-3 gap-4 max-w-3xl mx-auto p-5 rounded-3xl z-30">
				{
					skills.map((skill: any) => (
						<Skill name={skill.skillName} imageLink={urlForImage(skill.skillImage).url()} />

					))
				}
			</div>
			
		</div>
		<div id="projects" class="w-full scroll-py-10  scroll-smooth  min-h-screen snap-start bg-purple-200 flex flex-col  justify-center items-center">
			
			<h2 class="text-4xl pt-24 font-bold text-gray-700 mb-6 2xl:pt-0">Projects</h2>
			<div class="flex flex-wrap justify-center mb-10">
				{
				project1.map((project: any) => {
					return (
						<ProjectCard name={project.projectName} imageLink={urlForImage(project.projectThumbnail).url()} projectLink={project.projectLink} projectGithubLink={project.projectGithubRepo} tags={project.tags} />
					)
				})
				}
			</div>
		</div>
		<div id="contact" class="scroll-py-10  scroll-smooth  snap-center h-screen flex flex-col bg-indigo-400  justify-center items-center">
			<div class="flex flex-col w-full">
				<h2 class="text-4xl text-center text-white font-bold track mb-6 ">Get In Touch</h2>
				<ContactForm client:load />
			</div>
		</div> 
		<footer class="h-28 border-t bg-gray-400 w-full flex justify-center items-center opacity-70 snap-always snap-end">
			<p class="text-white text-2xl text-center">Jacks Web portfolio </p>
		 </footer>
	</div>
		

	
</Layout>

<style>

	.card{
		margin: 30px auto;
		height: 300px;
		background-color: rgba(65, 134, 117, 0.671);
		width: 300px;
	}
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
